{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\nLa sucursal del banco \"Dinero++\" dispone de dos filas para atender a sus clientes y \u00e9stas operan bajo pol\u00edticas diferentes. La primera fila est\u00e1 destinada para clientes en buen estatus y opera bajo la pol\u00edtica de que el primer cliente en llegar es el primero en ser atendido. La segunda fila est\u00e1 destinada para clientes morosos y opera bajo la pol\u00edtica de que el \u00faltimo cliente en llegar es el primero en ser atendido. Cuando un cliente llega a la sucursal, el sistema le dice en qu\u00e9 fila debe formarse. Cuentas con una bit\u00e1cora de eventos que indica en qu\u00e9 momento lleg\u00f3 cada cliente y en qu\u00e9 fila se form\u00f3, as\u00ed como en qu\u00e9 momento se atendi\u00f3 al siguiente cliente y de qu\u00e9 fila provino. Escribe un programa que determine en qu\u00e9 orden fueron atendidos los clientes.\n\n# Entrada\nUn entero $N$ seguido de la secuencia de $N$ eventos de la bit\u00e1cora. Un evento en el que llega un cliente se describe con la letra $E$ seguido del n\u00famero de fila en la que debe formarse y de su nombre. Un evento de atenci\u00f3n a cliente se describe con la letra $A$ seguido del n\u00famero de fila que se atiende. Puedes suponer que $0 \\leq N \\leq 10000$, que el n\u00famero de fila es $1$ o $2$, que los nombres de todos los clientes tienen una longitud de a lo mucho 10 letras min\u00fasculas y que no existen eventos de atenci\u00f3n para filas vac\u00edas.\n\n# Salida\nPara cada evento de atenci\u00f3n a cliente, el nombre del cliente atendido.\n\n# Ejemplo\n||input\n8\nE 1 juan\nE 2 paco\nE 1 jorge\nA 1\nE 2 pedro\nA 2\nA 1\nA 2\n||output\njuan\npedro\njorge\npaco\n||end\n"},"settings":{"cases":{"statement_001":{"in":"8\nE 1 juan\nE 2 paco\nE 1 jorge\nA 1\nE 2 pedro\nA 2\nA 1\nA 2","out":"juan\npedro\njorge\npaco","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":33554432,"OutputLimit":45056,"OverallWallTimeLimit":"1m0s","TimeLimit":"1s"},"validator":{"name":"token-caseless"}},"problem_id":5607,"title":"Un banco con clientes no preferentes","alias":"banco-clientes-no-preferentes","input_limit":10240,"visits":0,"submissions":507,"accepted":202,"difficulty":1.4170520499635915,"creation_date":1496876481,"source":"UAM Azcapotzalco 2017","order":"normal","visibility":2,"email_clarifications":false,"allow_user_add_tags":true,"show_diff":"none","quality_seal":true,"version":"5b58be57164ad26dcf0e78bc115775cfacfd64f1","commit":"00d8b522758507abb679447b5be62c679d9df881","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"rcc","classname":"user-rank-international-master","name":"rcc","creation_date":1496876481},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"32 MiB","overall_wall_time_limit":"1m0s","time_limit":"1s"},"points":13.05,"score":0,"status":"ok","_id":"6186d399cec13319334963"}