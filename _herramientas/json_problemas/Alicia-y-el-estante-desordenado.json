{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\nAlicia persigui\u00f3 al conejo blanco y cay\u00f3 en un agujero muy profundo... tan profundo que Alicia tuvo tiempo de aburrirse mientras ca\u00eda. De pronto, Alicia observ\u00f3 que en el t\u00fanel apareci\u00f3 un estante, el cual ten\u00eda botellas de mermelada en algunas repisas. Alicia se dio cuenta que las botellas de mermelada eran de diferentes tama\u00f1os y se propuso acomodarlas en orden creciente. Ya que Alicia estaba en ca\u00edda libre, sus acciones eran algo limitadas: Alicia puede agarrar una botella de una repisa, seguir cayendo con ella y luego colocarla en una repisa libre. Adem\u00e1s, Alicia no puede tener m\u00e1s de una botella en las manos al mismo tiempo.\n\nAlicia sabe que ser\u00e1 dif\u00edcil ordenar el estante completo y se conformar\u00e1 con ordenar lo m\u00e1s posible el inicio del estante. Ayuda a Alicia con su dif\u00edcil tarea.\n\n# Entrada\n\nCada fila de la entrada puede contener ya sea un entero positivo (el cual denota el tama\u00f1o de la botella en dicha repisa) o el entero 0 (el cual denota una repisa vac\u00eda). Puedes suponer que los tama\u00f1os de las botellas son todos distintos y en el rango de $1$ a $10^5$.\n\n# Salida\n\nLa m\u00e1xima cantidad de botellas que pueden quedar ordenadas desde el inicio del estante antes de que el orden se termine.\n\n# Ejemplo\n\n||input\n4\n2\n3\n0\n1\n0\n8\n5\n0\n9\n0\n||output\n4\n||description\nAlicia puede agarrar la botella de tama\u00f1o 4 y colocarla despu\u00e9s de la de tama\u00f1o 3. Luego puede agarrar la botella de tama\u00f1o 1 para que la botella de tama\u00f1o 8 sea la siguiente en el orden del estante. El orden se termina despu\u00e9s de la botella de tama\u00f1o 8 (Alicia no puede quitar la de tama\u00f1o 5 pues sigue cargando la de 1) por lo que la m\u00e1xima cantidad de botellas ordenadas es 4.\n||end\n\n"},"settings":{"cases":{"statement_001":{"in":"4\n2\n3\n0\n1\n0\n8\n5\n0\n9\n0","out":"4","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":33554432,"OutputLimit":16384,"OverallWallTimeLimit":"1m0s","TimeLimit":"1s"},"validator":{"name":"token-caseless"}},"problem_id":3882,"title":"Alicia y el estante desordenado","alias":"Alicia-y-el-estante-desordenado","input_limit":10240,"visits":0,"submissions":265,"accepted":5,"difficulty":null,"creation_date":1457737038,"source":"UAM Azcapotzalco 2016","order":"normal","visibility":2,"email_clarifications":false,"allow_user_add_tags":true,"show_diff":"none","quality_seal":true,"version":"0f219749c756636a7669ef3dd76e5f406f0d0eaf","commit":"f4c38d4c1a2b69927f0833f3526fb79b2a163862","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"rcc","classname":"user-rank-international-master","name":"rcc","creation_date":1457737038},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"32 MiB","overall_wall_time_limit":"1m0s","time_limit":"1s"},"points":38.69,"score":0,"status":"ok","_id":"6186d398e3684055853325"}