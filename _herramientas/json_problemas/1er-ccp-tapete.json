{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\n\nDesde que recuerdas, siempre te ha gustado el juego de *Twister* ya que es muy divertido ver a los adultos jugando, pero ellos siempre te dicen que est\u00e1s chiquito y no puedes. Es por eso que acabas de inventar un nuevo juego, no tan divertido pero que te ejercitar\u00e1.\n\nCuentas con un tapete de $N \\times N$ marcas, donde cada marca tiene alg\u00fan n\u00famero del $1$ al $N^2$. Ning\u00fan n\u00famero se repite y comienzas parado en la marca $1$. El objetivo del juego es pisar la marca $2$, luego a la $3$, y as\u00ed sucesivamente hasta pisar la marca con el \u00faltimo n\u00famero. Como est\u00e1s chiquito no puedes dar saltos largos, as\u00ed que s\u00f3lo podr\u00e1s saltar vertical u horizontalmente de una marca a otra contigua. No te preocupar\u00e1 pisar marcas distintas a la de tu destino conforme vas saltando, ya que intentar evitarlas volver\u00eda el juego muy complicado (aunque pisar una marca antes de tiempo no cuenta y tienes que volver a ella cuando ya le toque su turno).\n\nEscribe un programa que calcule la menor cantidad de saltos que tendr\u00e1s que dar para completar el juego.\n\n# Entrada\n\n- Un entero $N$, indicando la dimensi\u00f3n de la matriz.\n- Una matriz de $N \\times N$ enteros con los n\u00fameros del $1$ al $N^2$ sin repetir.\n- $1 \\leq N \\leq 100$\n\n# Salida\n\nUn entero que sea la menor cantidad de saltos que tendr\u00e1s que dar para completar el juego.\n\n# Ejemplo\n\n||input\n2\n1 2\n4 3\n||output\n3\n||description\nSaltamos de 1 a 2.\n\nSaltamos de 2 a 3.\n\nSaltamos de 3 a 4.\n||input\n2\n1 2\n3 4\n||output\n4\n||description\nSaltamos de 1 a 2.\n\nSaltamos de 2 a 1.\n\nSaltamos de 1 a 3.\n\nSaltamos de 3 a 4.\n\n(tambi\u00e9n hay otra soluci\u00f3n que salta de 1 a 2, de 2 a 4, de 4 a 3 y de 3 a 4)\n||input\n3\n1 8 9\n4 5 3\n7 6 2\n||output\n14\n||end\n"},"settings":{"cases":{"statement_001":{"in":"2\n1 2\n4 3","out":"3","weight":1},"statement_002":{"in":"2\n1 2\n3 4","out":"4","weight":1},"statement_003":{"in":"3\n1 8 9\n4 5 3\n7 6 2","out":"14","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":33554432,"OutputLimit":10240,"OverallWallTimeLimit":"1m0s","TimeLimit":"1s"},"validator":{"name":"token","group_score_policy":"sum-if-not-zero","tolerance":1.0e-9}},"problem_id":10811,"title":"El juego del mini-Twister","alias":"1er-ccp-tapete","input_limit":10240,"visits":0,"submissions":200,"accepted":72,"difficulty":1.2479983628605,"creation_date":1586628210,"source":"1er Copa Centroamericana de Programaci\u00f3n \/ UAM Azcapotzalco 2020","order":"normal","visibility":2,"email_clarifications":true,"allow_user_add_tags":false,"show_diff":"none","quality_seal":true,"version":"daad2a3200695030d70856bc1cce604b7b197e07","commit":"0f03b1eac36da4afa3e3f6732851065d09f77ab2","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"rcc","classname":"user-rank-international-master","name":"rcc","creation_date":1586628210},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"32 MiB","overall_wall_time_limit":"1m0s","time_limit":"1s"},"points":16.16,"score":0,"status":"ok","_id":"6186e2128174c334692689"}