{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\nDada una secuencia de enteros, imprime dicha secuencia ordenada de la siguiente manera: primero los enteros pares en orden creciente y luego los enteros impares en orden decreciente. Tu programa debe leer los datos e imprimir la salida seg\u00fan los formatos indicados en la entrada.\n\n# Entrada\nLa primera l\u00ednea de la entrada consta de dos caracteres $E$, $S$ y un caracter de salto de l\u00ednea. El resto de la entrada contiene la secuencia de enteros, la cual debe procesarse hasta el fin de archivo. Si $E$ = 'T' entonces la secuencia deber\u00e1 leerse con rutinas de lectura con formato (por ejemplo, *scanf*). Si $E$ = 'B' entonces la secuencia deber\u00e1 leerse con rutinas de lectura sin formato (por ejemplo, *fread*) y cada entero se representar\u00e1 con $sizeof(int32\\\\_t) = 4$ bytes. Puedes suponer que la secuencia tendr\u00e1 a lo mucho $100,000$ enteros y que todos los bytes de sus representaciones binarias son caracteres ASCII gr\u00e1ficos.\n\n# Salida\nSi $S$ = 'T' entonces la secuencia deber\u00e1 imprimirse con rutinas de escritura con formato (por ejemplo, *printf*) y los enteros deber\u00e1n estar separados por un espacio o salto de l\u00ednea. Si $S$ = 'B' entonces la secuencia deber\u00e1 imprimirse con rutinas de escritura sin formato (por ejemplo, *fwrite*) y cada entero deber\u00e1 representarse con $sizeof(int32\\\\_t) = 4$ bytes.\n\n# Ejemplo\n||input\nTB\n1078018627\n1078018628\n1078018629\n1078018630\n||output\nDBA@FBA@EBA@CBA@\n||description\nEste ejemplo supone que la computadora usa codificaci\u00f3n little-endian.\n||input\nBT\nCBA@DBA@EBA@FBA@\n||output\n1078018628\n1078018630\n1078018629\n1078018627\n||description\nEste ejemplo supone que la computadora usa codificaci\u00f3n little-endian.\n||end\n"},"settings":{"cases":{"statement_001":{"in":"TB\n1078018627\n1078018628\n1078018629\n1078018630","out":"DBA@FBA@EBA@CBA@","weight":1},"statement_002":{"in":"BT\nCBA@DBA@EBA@FBA@","out":"1078018628\n1078018630\n1078018629\n1078018627","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":33554432,"OutputLimit":1277952,"OverallWallTimeLimit":"1m0s","TimeLimit":"750ms"},"validator":{"name":"custom","custom_validator":{"source":"","language":"cpp","limits":{"ExtraWallTime":"0s","MemoryLimit":268435456,"OutputLimit":10240,"OverallWallTimeLimit":"5s","TimeLimit":"1s"}}}},"problem_id":5039,"title":"Lectura y escritura de datos","alias":"Lectura-y-escritura-de-datos","input_limit":10240,"visits":0,"submissions":526,"accepted":78,"difficulty":1.8229837761685155,"creation_date":1486781633,"source":"UAM Azcapotzalco 2017","order":"normal","visibility":2,"email_clarifications":false,"allow_user_add_tags":true,"show_diff":"none","quality_seal":true,"version":"35fb504e81b4a107afa61b1a3109c631cda34636","commit":"9bd7eb3d8602f8f831ceb03977c43edca6889493","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"rcc","classname":"user-rank-international-master","name":"rcc","creation_date":1486781633},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"32 MiB","overall_wall_time_limit":"1m0s","time_limit":"750ms"},"points":15.86,"score":0,"status":"ok","_id":"6186d3997d67e343788060"}