{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\nEn muchas universidades, inscribir algunos cursos requiere haber aprobado otros con anterioridad. Por ejemplo, para poder inscribir *Algoritmos y Estructuras de Datos* debes haber aprobado primero *Programaci\u00f3n Estructurada*. Consideraremos dos tipos de requisitos entre cursos:\n\n- Si el curso $A$ es un requisito duro del curso $B$ entonces $B$ puede inscribirse s\u00f3lo si $A$ ya fue aprobada.\n- Si el curso $A$ es un requisito suave del curso $B$ entonces $B$ puede inscribirse si $A$ ya fue aprobada o si $A$ puede inscribirse (en este \u00faltimo caso, $A$ y $B$ deben poder inscribirse juntas).\n\nDada una lista de cursos y sus requisitos, adem\u00e1s de una lista de los cursos que ya aprobaste, escribe un programa que calcule qu\u00e9 cursos puedes inscribir.\n\n# Entrada\nPrimero, un entero $N$ seguido de la lista de requisitos de los $N$ cursos de tu universidad. La informaci\u00f3n de cada curso est\u00e1 dada por una l\u00ednea con un entero $I$ que es la clave del curso en cuesti\u00f3n y un entero $K$ seguido de los datos de sus $K$ requisitos. Un requisito se especifica con la clave del curso requerido antecedido por el caracter $\\sim$ si es un requisito suave. Finalmente, un entero $M$ seguido de una l\u00ednea de $M$ enteros que son las claves de los cursos que ya aprobaste.\n\nTodos los cursos tienen claves num\u00e9ricas de $0$ a $N-1$. Puedes suponer que $0 \\leq N \\leq 1000$, que la lista de cursos aprobados es consistente con los requisitos entre cursos y que la gr\u00e1fica de requisitos duros no tiene ciclos (aunque la gr\u00e1fica de requisitos suaves s\u00ed puede tenerlos).\n\n# Salida\nUna secuencia de enteros ordenada y sin duplicados que corresponde con las claves de los cursos que pueden inscribirse.\n\n# Nota\nEste problema se puede resolver con los temas vistos en *Algoritmos y Estructuras de Datos* de la UAM Azcapotzalco.\n\n# Ejemplo\n||input\n5\n0 0\n1 1 0\n2 1 0\n3 2 0 1\n4 2 0 ~1\n1\n0\n||output\n1 2 4\n||end\n"},"settings":{"cases":{"statement_001":{"in":"5\n0 0\n1 1 0\n2 1 0\n3 2 0 1\n4 2 0 ~1\n1\n0","out":"1 2 4","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":33554432,"OutputLimit":16384,"OverallWallTimeLimit":"1m0s","TimeLimit":"1s"},"validator":{"name":"token-caseless"}},"problem_id":7606,"title":"\u00bfQu\u00e9 cursos puedo inscribir?","alias":"Que-cursos-puedo-inscribir","input_limit":10240,"visits":0,"submissions":111,"accepted":5,"difficulty":1.8498161726014977,"creation_date":1540677030,"source":"UAM Azcapotzalco 2018","order":"normal","visibility":2,"email_clarifications":false,"allow_user_add_tags":true,"show_diff":"none","quality_seal":true,"version":"8fc3f6f2630cb27a59c48deb04818d3277a22b87","commit":"531fa330e69a69903a4cd97a24fcf3f42d3873f4","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"rcc","classname":"user-rank-international-master","name":"rcc","creation_date":1540677030},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"32 MiB","overall_wall_time_limit":"1m0s","time_limit":"1s"},"points":38.69,"score":0,"status":"ok","_id":"6186d39cf013d985159440"}