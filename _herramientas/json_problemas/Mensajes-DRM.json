{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\n\nLa encriptaci\u00f3n DRM es relativamente nueva . Dada una cadena encriptada (la cual llamaremos mensaje DRM) , la desencriptaci\u00f3n consiste en tres simples pasos : **Dividir** , **Rotar** y **Unir** .\n\nEstos pasos se describir\u00e1n usando el siguiente mensaje DRM como ejemplo , \u201cEWPGAJRB\u201d :\n\n - **Divide** - Primero , divide el mensaje a la mitad , obteniendo \"EWPG\" y \"AJRB\" .\n - **Rota** - Para cada mitad , calcula su valor de rotaci\u00f3n , el cual se obtiene sumando el valor de cada car\u00e1cter (A = 0 , B = 1 , ... , Z = 25) . El valor de rotaci\u00f3n de \"EWPG\" es 4 + 22 + 15 + 6 = 47 . Rota cada elemento de \"EWPG\" 47 veces hacia adelante (pasando de A a Z en caso de ser necesario) para obtener una nueva cadena , \"ZRKB\" . Haciendo lo mismo con la segunda mitad \"AJRB\" , se obtiene \"BKSC\" .\n - **Une** - El \u00faltimo paso es unir la dos mitades obtenidas en el paso anterior , esto se lograra rotando cada car\u00e1cter de la primera mitad el valor correspondiente del car\u00e1cter en la segunda mitad . Para la primera posici\u00f3n , rotar 'Z' un total de 'B' veces , significa avanzar una sola vez , es decir , se obtiene 'A' . Continuando con este proceso para cada posici\u00f3n , se obtiene \"ABCD\" , siendo este el mensaje ya descifrado .\n\n# Entrada\n\nLa entrada consiste en una sola l\u00ednea , una cadena de longitud $l$ , que es el mensaje DRM que se va a descifrar . Todos los caracteres de la cadena son letras may\u00fasculas .\n\n# Salida\n\nMuestra el mensaje DRM ya descifrado .\n\n# Ejemplo\n\n||input\nEWPGAJRB\n||output\nABCD\n||input\nUEQBJPJCBUDGBNKCAHXCVERXUCVK\n||output\nACMECNACONTEST\n||end\n\n#L\u00edmites\n\n* $l \u2264 15 000$\n"},"settings":{"cases":{"statement_001":{"in":"EWPGAJRB","out":"ABCD","weight":1},"statement_002":{"in":"UEQBJPJCBUDGBNKCAHXCVERXUCVK","out":"ACMECNACONTEST","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":33554432,"OutputLimit":16384,"OverallWallTimeLimit":"1m0s","TimeLimit":"1s"},"validator":{"name":"token-caseless"}},"problem_id":6963,"title":"Mensajes DRM","alias":"Mensajes-DRM","input_limit":10240,"visits":0,"submissions":17,"accepted":8,"difficulty":null,"creation_date":1525318026,"source":"ACM-ICPC East Central North America Regional 2017","order":"normal","visibility":2,"email_clarifications":false,"allow_user_add_tags":true,"show_diff":"none","quality_seal":true,"version":"1ffed8ddd94e01fc301438daa6d16ba67ab43e81","commit":"643a201209f56de099088a4f5eed818c121e38d5","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"LuisPedroza","classname":"user-rank-international-master","name":"Luis Pedroza","creation_date":1525318026},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"32 MiB","overall_wall_time_limit":"1m0s","time_limit":"1s"},"points":31.55,"score":0,"status":"ok","_id":"6186d3a84c9f4743440375"}