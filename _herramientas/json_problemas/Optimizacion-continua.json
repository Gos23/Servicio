{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\nDada una expresi\u00f3n algebraica escrita en notaci\u00f3n polaca inversa, escribe un programa que calcule su m\u00ednimo global y en qu\u00e9 punto alcanza dicho m\u00ednimo.\n\nLa notaci\u00f3n polaca inversa permite escribir una expresi\u00f3n aritm\u00e9tica sin par\u00e9ntesis y sin tener que preocuparse por la precedencia de los operadores. Esta notaci\u00f3n se puede evaluar de la siguiente manera: se itera sobre las componentes de la expresi\u00f3n y cada vez que encontramos un operando, \u00e9ste se mete en una pila. Cuando lo que encontramos es un operador, hacemos lo siguiente:\n\n   - Si el operador es unario, se aplica el operador a la cima de la pila.\n   - Si el operador es binario, se sacan los dos elementos de la cima de la pila, se les aplica el operador y luego se guarda el resultado en la pila.\n\nPor ejemplo, al evaluar la expresi\u00f3n en notaci\u00f3n polaca inversa\n\n> 10 5 \/\n\nprimero se mete el 10 a la pila, luego se mete el 5 a la pila, y al encontrar el operador binario \/ se sacan los dos operandos: el primero en salir es el operando derecho mientras que el segundo en salir es el operando izquierdo (es decir, se evaluar\u00e1 10 \/ 5). El resultado de esta operaci\u00f3n luego se mete a la pila.\nEl valor final de la expresi\u00f3n es el valor que permanece en la pila despu\u00e9s de terminar el proceso.\n\n# Entrada\nUn entero $N$, el cual denota el n\u00famero de componentes de la expresi\u00f3n en notaci\u00f3n polaca inversa. Posteriormente un entero $V$ que es el n\u00famero de inc\u00f3gnitas que tendr\u00e1 la expresi\u00f3n. Si existen $V$ inc\u00f3gnitas, se asume que \u00e9stas son reales y aparecen dentro de la expresi\u00f3n con identificadores $x_0, x_1, \\dots, x_{V-1}$.\nPosteriormente las $N$ componentes de la expresi\u00f3n en notaci\u00f3n polaca inversa separadas por espacios. Cada componente puede ser una de las siguientes:\n\n   - Una constante decimal.\n   - Una inc\u00f3gnita de la forma $x_i$ con $0 \\leq i < V$.\n   - Un operador binario $+, -, *, \/, \\wedge$ donde $\\wedge$ denota el operador de exponenciaci\u00f3n.\n   - Un operador unario *sin*, *cos*, *tan* o *sqrt*. Las funciones trigonom\u00e9tricas trabajan sobre radianes al igual que sus contrapartes de C y C++.\n\nPuedes suponer que $1 \\leq N \\leq 50, 1 \\leq V \\leq 10$ y que las coordenadas del \u00f3ptimo cumplen que $|x_i| \\leq 50$.\n\n# Salida\nUn real que es el m\u00ednimo global de la funci\u00f3n seguido de $V$ reales que indican las coordenadas del punto en el que se alcanza dicho m\u00ednimo. Puedes asumir que existe una \u00fanica soluci\u00f3n. El resultado debe ser correcto con precisi\u00f3n de mil\u00e9simas.\n\n# Ejemplo\n||input\n9 2\nx0 5 - 2 ^ x1 2 ^ +\n||output\n0\n5 0\n||description\nLa expresi\u00f3n corresponde con (x0 - 5)^2 + x1^2, con m\u00ednimo global 0 en el punto (5, 0)\n||end\n\n# Sugerencia\nSi se desea resolver este problema usando una metaheur\u00edstica de optimizaci\u00f3n por enjambre de part\u00edculas (\"Particle Swam Optimization\" o *PSO*) se recomienda generar una poblaci\u00f3n de 500 part\u00edculas, realizar 500 iteraciones, usar un factor inercial de 0.5, un factor social de 1 y un factor cognitivo de 2.\n"},"settings":{"cases":{"statement_001":{"in":"9 2\nx0 5 - 2 ^ x1 2 ^ +","out":"0\n5 0","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":33554432,"OutputLimit":16384,"OverallWallTimeLimit":"1m0s","TimeLimit":"10s"},"validator":{"name":"custom","custom_validator":{"source":"","language":"cpp","limits":{"ExtraWallTime":"0s","MemoryLimit":268435456,"OutputLimit":16384,"OverallWallTimeLimit":"1m0s","TimeLimit":"1s"}}}},"problem_id":6224,"title":"Optimizaci\u00f3n continua","alias":"Optimizacion-continua","input_limit":10240,"visits":0,"submissions":131,"accepted":6,"difficulty":null,"creation_date":1512537776,"source":"UAM Azcapotzalco 2017","order":"normal","visibility":2,"email_clarifications":false,"allow_user_add_tags":true,"show_diff":"none","quality_seal":true,"version":"d15c6ab6a4cb56d298e59b504b3e0940d3351da0","commit":"ecb3ab7e5928929018d32e0311c6feac6ffa6f6a","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"rcc","classname":"user-rank-international-master","name":"rcc","creation_date":1512537776},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"32 MiB","overall_wall_time_limit":"1m0s","time_limit":"10s"},"points":35.62,"score":0,"status":"ok","_id":"6186d39ae78a8080744065"}