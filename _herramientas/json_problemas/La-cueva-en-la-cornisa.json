{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\nEn alg\u00fan lugar de la cornisa por la que John Carter intentaba escapar de los indios, John descubri\u00f3 una cueva en la que decidi\u00f3 esconderse. La cueva result\u00f3 ser muy estrecha, oscura y profunda, as\u00ed que John Carter estaba seguro de que los indios no lo encontrar\u00edan. Poco despu\u00e9s, los indios encontraron la misma cueva y decidieron entrar a explorarla. Los indios entraron uno por uno, pero a veces el jefe indio (que permanec\u00eda afuera de la cueva) ped\u00eda que saliera cierto indio y diera su reporte. Por lo limitado de la movilidad dentro de la cueva, los indios que estaban m\u00e1s cerca de la entrada ten\u00edan que salir para permitir que el indio llamado tambi\u00e9n pudiera salir. Ocasionalmente el jefe se equivocaba y llamaba a un indio que no estaba dentro de la cueva, pero los indios se percataban del error hasta que todos hab\u00edan salido y el indio llamado no estaba.\n\nEscribe un programa que determine en qu\u00e9 orden salieron los indios de la cueva cada vez que el jefe indio llamaba a alguien.\n\n# Entrada\nUn entero $N$ seguido de $N$ eventos. Cada evento contendr\u00e1 una letra `E` o `B` seguida del nombre de un indio: si la letra es `E` entonces el indio entr\u00f3, mientras que si la letra es `B` entonces el indio fue llamado por el jefe. Puedes suponer que $0 \\leq N \\leq 10^5$, que los nombres de los indios consisten de entre 3 y 10 letras, que el jefe no llam\u00f3 a nadie si no hab\u00eda indios dentro de la cueva y que no hay indios con nombres repetidos.\n\n# Salida\nPor cada evento del tipo `B`, un rengl\u00f3n que contenga los nombres de los indios en el orden en el que salieron.\n\n# Ejemplo\n||input\n7\nE tatanka\nE iyotanka\nE tasunka\nE witko\nB iyotanka\nE makhpyia\nB luta\n||output\nwitko tasunka iyotanka\nmakhpyia tatanka\n||end\n"},"settings":{"cases":{"statement_001":{"in":"7\nE tatanka\nE iyotanka\nE tasunka\nE witko\nB iyotanka\nE makhpyia\nB luta","out":"witko tasunka iyotanka\nmakhpyia tatanka","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":33554432,"OutputLimit":768000,"OverallWallTimeLimit":"1m0s","TimeLimit":"1s"},"validator":{"name":"custom","group_score_policy":"sum-if-not-zero","tolerance":1.0e-9,"custom_validator":{"source":"","language":"cpp","limits":{"ExtraWallTime":"0s","MemoryLimit":268435456,"OutputLimit":10240,"OverallWallTimeLimit":"5s","TimeLimit":"1s"}}}},"problem_id":13768,"title":"La cueva en la cornisa","alias":"La-cueva-en-la-cornisa","input_limit":10240,"visits":0,"submissions":204,"accepted":11,"difficulty":0.7847977898616474,"creation_date":1630341737,"source":"UAM Azcapotzalco 2021","order":"normal","visibility":2,"email_clarifications":false,"allow_user_add_tags":false,"show_diff":"none","quality_seal":false,"version":"351194f24aa68646f0d75cd58fe627180486b30a","commit":"b69bc2b2300b1dfbcc521926527d3600a7360c8e","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"rcc","classname":"user-rank-international-master","name":"rcc","creation_date":1630341737},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"32 MiB","overall_wall_time_limit":"1m0s","time_limit":"1s"},"points":27.89,"score":0,"status":"ok","_id":"6186d3a29a84f169611221"}