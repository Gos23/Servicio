{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\n\nConsidere tres cuadrados uno al lado del otro. Cada cuadrado tiene un vecino\nizquierdo y uno derecho. Por ejemplo, el cuadrado del centro tiene como vecino\nizquierdo al primer cuadrado y como vecino derecho al ultimo cuadrado. De manera\nsimilar el primer cuadrado tiene como vecino izquierdo al ultimo cuadrado y como\nvecino derecho al cuadrado del centro.\n\nCada cuadrado cambia de color (blanco o negro) tomando en cuenta su propio color\ny el de sus dos vecinos de acuerdo a la siguiente tabla.\n\n| Izquierdo    | Cuadrado    | Derecho | Nuevo Color |\n| ------------- |:-------------:| -----:| --- |\n| Negro  | Negro  | Negro  | Negro  |\n| Negro  | Negro  | Blanco | Blanco |\n| Negro  | Blanco | Negro  | Negro  |\n| Negro  | Blanco | Blanco | Blanco |\n| Blanco | Negro  | Negro  | Negro  |\n| Blanco | Negro  | Blanco | Blanco |\n| Blanco | Blanco | Negro  | Negro  |\n| Blanco | Blanco | Blanco | Blanco |\n\nPor ejemplo si al inicio los colores de los tres cuadrados son negro, blanco,\nblanco y se aplica la regla descrita en la tabla una vez, entonces los nuevos\ncolores de los cuadrados ser\u00e1n: blanco, blanco, negro.\n\nEscriba un programa que determine el color de los cuadrados despu\u00e9s de aplicar\nla regla $n$ veces.\n\n# Entrada\n\nUn entero $n$ que indica el n\u00famero de veces que debe aplicarse la regla y a\ncontinuaci\u00f3n 3 enteros que representan los colores iniciales de los cuadrados: 0\npara negro y 1 para blanco. Puede asumir que $0 \\leq n \\leq 1000$.\n\n# Salida\n\nTres enteros separados por un espacio que representan los colores de los\ncuadrados despu\u00e9s de aplicar la regla $n$ veces.\n\n# Ejemplo\n\n||input\n1\n0 1 1\n||output\n1 1 0\n||input\n2\n1 1 1\n||output\n1 1 1\n||end\n"},"settings":{"cases":{"statement_001":{"in":"1\n0 1 1","out":"1 1 0","weight":1},"statement_002":{"in":"2\n1 1 1","out":"1 1 1","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":33554432,"OutputLimit":10240,"OverallWallTimeLimit":"1m0s","TimeLimit":"1s"},"validator":{"name":"token-caseless","tolerance":1.0e-9}},"problem_id":8630,"title":"Cuadrados blancos y negros","alias":"Cuadrados-blancos-y-negros","input_limit":10240,"visits":0,"submissions":133,"accepted":16,"difficulty":0.7847977898616474,"creation_date":1562043520,"source":"UAM Azcapotzalco 2019","order":"normal","visibility":2,"email_clarifications":false,"allow_user_add_tags":true,"show_diff":"none","quality_seal":true,"version":"20e01cb1836bf22528c326197616426788b1d5cb","commit":"4ad3ebb75e8af49399239b044fce922542249408","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"mariomm","classname":"user-rank-master","name":"mariomm","creation_date":1562043520},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"32 MiB","overall_wall_time_limit":"1m0s","time_limit":"1s"},"points":24.47,"score":0,"status":"ok","_id":"6186d3a5e4dfd961524293"}