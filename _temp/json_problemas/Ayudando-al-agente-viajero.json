{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\nEres un agente viajero y deseas conocer la mejor ruta para visitar $N$ ciudades (empezando desde cualquiera de ellas y sin necesidad de regresar a la ciudad inicial). Cuentas con las coordenadas en el plano de las $N$ ciudades pero tambi\u00e9n cuentas con un orden para recorrerlas, el cual ha sido usado por tu familia generaci\u00f3n tras generaci\u00f3n (tu padre, abuelos, etc. tambi\u00e9n eran agentes viajeros). Est\u00e1s seguro de poder mejorar dicho orden pero tampoco quieres modificarlo demasiado para no romper con la tradici\u00f3n familiar.\n\nHas decidido que la \u00fanica modificaci\u00f3n que realizar\u00e1s es tomar un segmento del orden actual e invertirlo. Por ejemplo, si para $N = 6$ el recorrido original es 0 1 2 3 4 5 y decides invertir el segmento con extremos en las ciudades 1 y 3, el orden resultante es 0 3 2 1 4 5 mientras que en caso de elegir el segmento con extremos en las ciudades 0 y 5, el orden resultante es 5 4 3 2 1 0.\n\nEscribe un programa que calcule el costo de recorrer las ciudades en el orden actual y el mejor costo que puedes obtener al invertir alg\u00fan segmento de dicho orden.\n\n# Entrada\nUn entero $N$ seguido de $N$ parejas de reales que denotan las coordenadas en el plano de cada ciudad. Posteriormente una permutaci\u00f3n de los enteros del $0$ al $N - 1$ que denotan el orden actual de visita. Puedes suponer que $1 \\leq N \\leq 10000$.\n\n# Salida\nDos reales que denoten el costo de recorrer las ciudades en el orden dado y el mejor costo que puedes obtener al invertir alg\u00fan segmento de dicho orden. Tu programa se considerar\u00e1 correcto si los valores calculados son razonablemente cercanos a la respuesta correcta.\n\n# Ejemplo\n||input\n3\n1.5 7.2\n3.4 6.5\n9.0 2.4\n0 2 1\n||output\n15.845 8.965\n||end\n"},"settings":{"cases":{"statement_001":{"in":"3\n1.5 7.2\n3.4 6.5\n9.0 2.4\n0 2 1","out":"15.845 8.965","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":33554432,"OutputLimit":16384,"OverallWallTimeLimit":"1m0s","TimeLimit":"3.5s"},"validator":{"name":"custom","custom_validator":{"source":"","language":"cpp"}}},"problem_id":5659,"title":"Ayudando al agente viajero","alias":"Ayudando-al-agente-viajero","input_limit":10240,"visits":0,"submissions":379,"accepted":17,"difficulty":null,"creation_date":1499443187,"source":"UAM Azcapotzalco 2017","order":"normal","visibility":2,"email_clarifications":false,"allow_user_add_tags":false,"show_diff":"none","quality_seal":true,"version":"11152ec13c36d5799145c8644d33f3e22af351b3","commit":"2be8c11b188bfed67b75dc0c069014a01ae0d8ed","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"rcc","classname":"user-rank-international-master","name":"rcc","creation_date":1499443187},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"32 MiB","overall_wall_time_limit":"1m0s","time_limit":"3.5s"},"points":23.98,"score":0,"status":"ok","_id":"6186d39a29892824642092"}