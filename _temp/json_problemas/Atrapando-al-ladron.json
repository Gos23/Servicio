{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\nUn h\u00e1bil ladr\u00f3n acaba de robarse un valioso bot\u00edn y est\u00e1 esperando que un helic\u00f3ptero de la mafia llegue por \u00e9l para escapar. Mientras tanto y para evitar ser atrapado, el ladr\u00f3n est\u00e1 movi\u00e9ndose por la ciudad de una manera aparentemente err\u00e1tica. T\u00fa eres el mejor polic\u00eda de la ciudad y tu labor es capturarlo lo m\u00e1s r\u00e1pido posible antes de que escape. Afortunadamente, una llamada an\u00f3nima te indic\u00f3 en qu\u00e9 lugares estar\u00e1 el ladr\u00f3n antes de que pueda escapar.\n\nLa ciudad est\u00e1 descrita por $N$ v\u00e9rtices numerados de $0$ a $N - 1$ y por $M$ aristas o calles de doble sentido. Tu posici\u00f3n inicial es el v\u00e9rtice $0$ y te toma un minuto moverte por una arista para llegar a otro v\u00e9rtice. El ladr\u00f3n tiene la misma velocidad y puedes optar por no cambiar de v\u00e9rtice si sabes que el ladr\u00f3n llegar\u00e1 a donde t\u00fa est\u00e1s. Escribe un programa que calcule la menor cantidad de minutos que necesitar\u00e1s para atrapar al ladr\u00f3n o si ser\u00e1 imposible capturarlo.\n\n# Entrada\nLos enteros $N, M$ seguidos de $M$ parejas de enteros que denotan los v\u00e9rtices unidos por cada una de las $M$ aristas. Posteriormente un entero $L$ seguido de $L$ enteros $p_0, p_1, \\dots, p_{L-1}$ donde $p_i$ denota el v\u00e9rtice donde estar\u00e1 el ladr\u00f3n al minuto $i$. El ladr\u00f3n escapa al minuto $L$. Puedes suponer que $0 \\leq N, L \\leq 10,000$ y $0 \\leq M \\leq 100,000$.\n\n# Salida\nUn entero que sea la menor cantidad de minutos que se necesitan para atrapar el ladr\u00f3n o el valor -1 si es imposible capturarlo.\n\n# Ejemplo\n||input\n5 4\n0 1\n0 2\n0 4\n1 3\n2\n1 3\n||output\n-1\n||input\n5 4\n0 1\n0 2\n0 4\n1 3\n5\n1 3 1 3 1\n||output\n2\n||input\n5 4\n0 1\n0 2\n0 3\n1 3\n5\n4 4 4 4 4\n||output\n-1\n||end\n"},"settings":{"cases":{"statement_001":{"in":"5 4\n0 1\n0 2\n0 4\n1 3\n2\n1 3","out":"-1","weight":1},"statement_002":{"in":"5 4\n0 1\n0 2\n0 4\n1 3\n5\n1 3 1 3 1","out":"2","weight":1},"statement_003":{"in":"5 4\n0 1\n0 2\n0 3\n1 3\n5\n4 4 4 4 4","out":"-1","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":33554432,"OutputLimit":16384,"OverallWallTimeLimit":"1m0s","TimeLimit":"1s"},"validator":{"name":"token-caseless"}},"problem_id":5775,"title":"Atrapando al ladr\u00f3n","alias":"Atrapando-al-ladron","input_limit":10240,"visits":0,"submissions":286,"accepted":36,"difficulty":1.7923988949308238,"creation_date":1506999826,"source":"UAM Azcapotzalco 2017","order":"normal","visibility":2,"email_clarifications":false,"allow_user_add_tags":true,"show_diff":"none","quality_seal":true,"version":"f81280ed413eb09713c9731274203dc964b0cdf7","commit":"27ca7700e2c30bf4416c0a242db83e506bfda29b","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"rcc","classname":"user-rank-international-master","name":"rcc","creation_date":1506999826},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"32 MiB","overall_wall_time_limit":"1m0s","time_limit":"1s"},"points":19.2,"score":0,"status":"ok","_id":"6186d39a9142a986190053"}