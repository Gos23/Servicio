{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\nEres el encargado de organizar una serie de concursos de programaci\u00f3n y cada concurso consta de exactamente cuatro problemas. En cada concurso deseas poner problemas con niveles de dificultad $P_1, P_2, P_3, P_4$ tales que $1 \\leq P_1 < P_2 < P_3 < P_4 \\leq 100$ y que $P_{i+1} - P_{i} \\leq 10$.\n\nCuentas ya con una lista ordenada de $N$ problemas y deseas organizar la serie de concursos de este a\u00f1o de modo que los problemas de tu lista aparezcan en el mismo orden. Sin embargo, es posible que sea necesario inventar e insertar problemas nuevos en la lista que todos los concursos organizados cumplan las restricciones. Una vez finalizada la lista, los primeros cuatro problemas formar\u00e1n el primer concurso, los siguientes cuatro problemas formar\u00e1n el siguiente concurso y as\u00ed sucesivamente.\n\nEscribe un programa que determine cu\u00e1l es el n\u00famero m\u00ednimo de problemas nuevos que necesitas insertar en la lista para organizar la serie de concursos.\n\n# Entrada\nLa entrada consiste de varios casos de prueba, los cuales deben procesarse hasta el fin de archivo. Cada caso de prueba consiste de un entero $N$ seguido una secuencia de $N$ enteros que denotan las dificultades de los $N$ problemas de tu lista original. Puedes suponer que $1 \\leq N \\leq 100,000$ y que las dificultades de los problemas est\u00e1n en el rango de $1$ a $100$.\n\n# Salida\nPara cada caso de prueba, un entero que sea la m\u00ednima cantidad de problemas nuevos que necesitas insertar en la lista.\n\n# Ejemplo\n||input\n4\n10 15 25 30\n4\n15 20 25 40\n3\n3 3 3\n8\n60 90 61 62 63 91 92 93\n11\n5 14 30 32 39 46 47 47 30 58 47\n||output\n0\n4\n9\n4\n9\n||end\n"},"settings":{"cases":{"statement_001":{"in":"4\n10 15 25 30\n4\n15 20 25 40\n3\n3 3 3\n8\n60 90 61 62 63 91 92 93\n11\n5 14 30 32 39 46 47 47 30 58 47","out":"0\n4\n9\n4\n9","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":268435456,"OutputLimit":16384,"OverallWallTimeLimit":"1m0s","TimeLimit":"10s"},"validator":{"name":"token-caseless"}},"problem_id":6601,"title":"Creaci\u00f3n de concursos de programaci\u00f3n","alias":"Creacion-de-concursos-de-program","input_limit":10240,"visits":0,"submissions":31,"accepted":3,"difficulty":null,"creation_date":1520098227,"source":"(Adaptaci\u00f3n) Facebook Hacker Cup 2016","order":"normal","visibility":2,"email_clarifications":false,"allow_user_add_tags":true,"show_diff":"none","quality_seal":true,"version":"7b8b628cd41f27ef5ac2727ddee37002935abeda","commit":"8ecc8bcf4d574080de3cba6331545a4f2bc9ba5a","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"rcc","classname":"user-rank-international-master","name":"rcc","creation_date":1520098227},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"256 MiB","overall_wall_time_limit":"1m0s","time_limit":"10s"},"points":50,"score":0,"status":"ok","_id":"6186d39b87f6b123648344"}