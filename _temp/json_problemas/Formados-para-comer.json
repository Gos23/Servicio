{"statement":{"language":"es","images":[],"sources":[],"markdown":"# Descripci\u00f3n\nEn la fiesta de graduaci\u00f3n organizaron una taquiza y ya est\u00e1 todo listo para atender a los invitados. Los responsables del evento organizaron dos filas: la fila donde te dan un taco y la fila donde te dan un refresco. Al llegar al evento, cada invitado debe formarse directamente en la fila de los tacos y, en cuanto lo atiendan, debe formarse directamente en la fila de los refrescos. Cuando al invitado lo atiendan en la segunda fila y le den su refresco, ya puede ir a comer.\n\nHasta ahora han ocurrido $N$ de los siguientes tipos de eventos:\n\n - `LLEGA` $V$: El invitado con nombre $V$ lleg\u00f3 al evento.\n - `ATIENDE TACO`: Se atendi\u00f3 al siguiente invitado de la fila de los tacos.\n - `ATIENDE REFRESCO`: Se atendi\u00f3 al siguiente invitado de la fila de los refrescos.\n\nEscribe un programa que determine los nombres de los invitados que a\u00fan est\u00e1n formados en cada fila.\n\n# Entrada\nEl entero $N$ seguido de la secuencia de $N$ eventos en el orden en el que ocurrieron. Puedes suponer que $0 \\leq N \\leq 10^5$ y que los nombres est\u00e1n compuestos exclusivamente por letras min\u00fasculas.\n\n# Salida\nDos l\u00edneas con los nombres de los invitados que a\u00fan est\u00e1n formados en la primera y en la segunda fila, respectivamente, impresos del frente al final de cada fila.\n\n# Ejemplo\n||input\n13\nLLEGA hugo\nLLEGA paco\nATIENDE TACO\nLLEGA luis\nATIENDE TACO\nATIENDE REFRESCO\nLLEGA ana\nLLEGA karen\nATIENDE TACO\nLLEGA timmy\nATIENDE TACO\nATIENDE REFRESCO\nLLEGA wanda\n||output\nkaren timmy wanda\nluis ana\n||end\n"},"settings":{"cases":{"statement_001":{"in":"13\nLLEGA hugo\nLLEGA paco\nATIENDE TACO\nLLEGA luis\nATIENDE TACO\nATIENDE REFRESCO\nLLEGA ana\nLLEGA karen\nATIENDE TACO\nLLEGA timmy\nATIENDE TACO\nATIENDE REFRESCO\nLLEGA wanda","out":"karen timmy wanda\nluis ana","weight":1}},"limits":{"ExtraWallTime":"0s","MemoryLimit":33554432,"OutputLimit":204800,"OverallWallTimeLimit":"1m0s","TimeLimit":"500ms"},"validator":{"name":"custom","tolerance":1.0e-9,"custom_validator":{"source":"","language":"cpp","limits":{"ExtraWallTime":"0s","MemoryLimit":268435456,"OutputLimit":10240,"OverallWallTimeLimit":"5s","TimeLimit":"500ms"}}}},"problem_id":12850,"title":"Formados para comer","alias":"Formados-para-comer","input_limit":10240,"visits":0,"submissions":129,"accepted":42,"difficulty":0.7819009147087368,"creation_date":1614280176,"source":"UAM Azcapotzalco 2021","order":"normal","visibility":2,"email_clarifications":false,"allow_user_add_tags":false,"show_diff":"none","quality_seal":false,"version":"78f3c054e72cfd75721999676603ddad06b81243","commit":"0af5bc30804889d710e4d7c72f9153027e7b0a94","nominationStatus":{"alreadyReviewed":false,"dismissed":false,"dismissedBeforeAc":false,"nominated":false,"nominatedBeforeAc":false,"language":"","canNominateProblem":false,"solved":false,"tried":false},"problemsetter":{"username":"rcc","classname":"user-rank-international-master","name":"rcc","creation_date":1614280176},"languages":["c11-gcc","c11-clang","cpp11-gcc","cpp11-clang","cpp17-gcc","cpp17-clang","java","py2","py3","rb","cs","pas","hs","lua"],"accepts_submissions":true,"karel_problem":false,"limits":{"input_limit":"10 KiB","memory_limit":"32 MiB","overall_wall_time_limit":"1m0s","time_limit":"500ms"},"points":18.43,"score":0,"status":"ok","_id":"6186d3a20546a657187389"}